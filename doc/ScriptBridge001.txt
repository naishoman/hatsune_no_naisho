ボカロ3用Lua拡張ライブラリ「ScriptBridge」です。

・目的
　ボカロ3のJobプラグインを任意のスクリプト言語で記述可能にします。
　OS標準では、JScript/VBScriptがサポートされています。
　ActiveScript対応のスクリプトエンジンの追加インストールで
　対応する言語を増やすことが可能です。

　なお、以降の説明では、基本JScriptにより説明してあります。
　他の言語の場合には、適切に読み替えてください。

・インストール
　1)拡張ライブラリの配置
　　ScriptBridge.dllをボカロ3のLua拡張ライブラリの読み込みパスに配置します。
　　・ボカロ3のインストールフォルダ
　　・スクリプトの格納フォルダ
　　のいずれか
　　登録・実行時両方で必要のため、問題がなければボカロのインストールフォルダに
　　配置することをお勧めします。
　　32bit OS/64bit OSのいずれも、ScriptBridge.dllを利用します。
　　本ツールを拡張ライブラリとしてだけ利用するためには、ここまでで利用可能です。

　2)システムへの登録
　　proxyスクリプト(Luaスクリプト)自動生成機能を利用するためには、
　　本DLLを、COMコンポーネントとしてシステムに登録する必要があります。
　　任意のディレクトリに、DLLとインストール用batを配置したあと、
　　以下のバッチファイルを実行してください。
　　・32bit OS
　　　install.bat
　　・64bit OS
　　　install64.bat
　　32bit OSでは、ScriptBridge.dll、64bit OSでは、ScriptBridge64.dllが
　　システムに登録されます。
　　32bit OSの場合には、ボカロ3のインストールフォルダにあるDLLを
　　そのままシステム登録して利用できます。
　　システム登録後は、DLLの移動をしないでください。
　　移動をした場合には、再登録が必要となります。
　　アンインストールする場合には、同様にuninstll.bat/uninstall64.batを
　　利用してください。

・Jobプラグインの登録方法
　本ライブラリ用のスクリプトは、そのままボカロ3に登録できません。
　橋渡しを行うproxyスクリプト(Luaスクリプト)を登録します。
　なお、本ライブラリがシステムに登録されている環境では、
　後述のproxyスクリプト自動生成機能を利用することができます。

・JobプラグインAPIについて
　JobプラグインAPIは、JobPluginオブジェクトのメンバーとしてアクセスできます。
　例) JobPlugin.VSSeekToBeginNote();

　APIの引数は、オリジナルのJobプラグインAPIと同じですが、
　Lua言語と異なり、戻り値は１つのみとなり、複数戻り値を持つ関数は、
　通常VSBool resultにあたる部分は、戻り値となりません。
　関数が成功したかどうかは、戻り値オブジェクトがNULLかどうかを判定してください。
　例) var note = JobScript.VSGetNextNoteEx();
　なお、VSGetTimeSigAtだけは、例外としてresult部分を無くしても、まだ引数が２つ残るため
　VSGetNextTimeSig()と同じVSLuaTimeSigを返すように変更してあります。

・オブジェクトの生成
　VSInsertNoteなどで使われるオブジェクトを生成する場合には、型名を指定してnewしてください。
　例) var note = new VSLuaNote();
　（Luaではテーブルとして実装されているものです。）

・main関数
　main関数は、本スクリプト内に記述します。引数は同じです。

・manifest関数
　manifest関数は、本スクリプト内に記述することができます。
　本スクリプト内に記述する場合には、作者、タイトル、コメントを，区切りで
　つないだ文字列を返してください。GUIDやバージョンは勝手に付きます。（指定できません）
　例) function manifest() { return "ないしょの人,タイトル,コメント"; }
　通常通り、Luaファイルにmanifestを記述することもできます。
　その場合には、requireの後に記述してください。
　manifest関数がどちらにも存在しない場合は、ファイル名を用いて、
　仮登録用manifest処理が自動で行われます。
　（作者名は現在のユーザ名となりますので、公開する場合には明記することをお勧めします）

・proxyスクリプト自動生成
　本ツールDLLがシステムに登録されている場合(インストールの手順(2)を実行している場合)に、
　対応したスクリプトをダブルクリックで実行すると、
　スクリプトと同じ場所にproxyスクリプト(Luaスクリプト)が生成されます。

　原理は、スクリプト内で、クラスID("Vocaloid3.ScriptBridge")のオブジェクトをインスタンス化させると、
　Luaファイルが自動生成するようになっています。。
　例) new ActiveXObject("Vocaloid3.ScriptBridge");
　生成されるLuaファイルにマニフェスト関数を追加したい場合には、取得したオブジェクトのプロパティーを
　設定してください。未設定のプロパティーは、自動で保管されます。
　例) var manifest = new ActiveXObject("Vocaloid3.ScriptBridge");
　    manifest.name = "神調教プラグイン";
　設定可能なプロパティーには以下のものがあります。
　・name			プラグイン名称
　・comment			プラグインコメント
　・author			プラグイン作者
　・pluginID		プラグインID(GUID)
　・pluginVersion	プラグインバージョン
　・apiVersion		Jobプラグインのバージョン

・proxyスクリプトの詳細
　proxyスクリプトは、スクリプト内に記述されている拡張子違いのファイルを自動で読み込み、
　スクリプトファイルとして実行します。
　もし、記述が見つからない場合には、同一フォルダ内の拡張子違いのファイルを
　自動で探して実行します。拡張子違いのファイルが複数存在する場合には、
　実行されるファイルは、不定となります。
　ファイルの先頭のコメントに明記するようにしてください。

・独自拡張API
　本ツール用に独自拡張したAPIです。
　・VSFileDialog(filter,defext,type)
　　ファイルダイアログを開きます。
　　引数
　　　filter:開くファイル種別を指定します。
　　　　　　　ファイルの種別と拡張子を|で任意の数繋いでください。
　　　defext:拡張子省略時のデフォルト拡張子です。
　　　type: 0:開くファイルダイアログ(読み込み) 存在するファイルのみ指定可能
　　　      1:保存ファイルダイアログ(書き込み) 上書きチェックあり
　　戻り値
　　　ファイルのフルパス文字列。（キャンセルされた場合には空文字列）

・サンプルについて
　スクリプトサンプルとして５つのスクリプトを含めてあります。
　なお、doremi.js以外は、Luaファイルがありませんので、本ツールDLLをシステムへの登録して
　ダブルクリックで実行して、Luaファイルを生成させてから、ボカロ3に登録させてください。
　Luaファイルは、拡張子違いのLuaファイルを作り、以下の行を記述するだけでも登録可能です。
　　require("ScriptBridge")

　・doremi.js
　　選択範囲のノートの歌詞を音階に変更します。
　　JScriptのサンプルです。Lua側にmanifestを記述、js側にメイン処理が書かれています。
　・音声合成.js
　　選択範囲のノートの歌詞を連結して、SAPIのTTSで喋ります。
　　日本語の歌詞と、日本語の音声合成エンジンで実行されることを想定しています。
　・nothing.js
　　なにもしません。
　　proxyスクリプト自動生成でmanifestを生成するサンプルにもなっています。
　・vbstest.vbs
　　とりあえずVBScriptの実験用です。メッセージボックスが出るだけです＾＾；
　　proxyスクリプト自動生成でmanifestを生成するサンプルにもなっています。
　・filedlg.js
　　ファイルファイアログのサンプルです。
　　入力ファイルを読み込み、そのまま出力ファイルに書き出します。

・配布について
　本ツールは、作成したスクリプトと一緒にして再配布可能です。
　やる人がいるかは分かりませんが念のため＾＾；

・更新履歴
  Ver.0.01  ・初版
